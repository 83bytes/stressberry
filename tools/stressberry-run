#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
import argparse
import datetime
import psutil
import sys
import threading
import time
import yaml

import stressberry


def _main(args):

    # Cool down first
    print('Cooldown...')
    stressberry.cooldown()

    t = threading.Thread(target=stressberry.test01, args=())
    t.start()

    interval = 1.0

    times = []
    temps = []
    freq = []
    load = []
    while t.is_alive():
        times.append(time.time())
        temps.append(stressberry.measure_temp())
        freq.append(stressberry.measure_core_frequency())
        load.append(psutil.cpu_percent() / 100.0)
        t.join(interval)

    # normalize times
    time0 = times[0]
    times = [tm - time0 for tm in times]

    args.outfile.write(
        '# This file was created by stressberry v{} on {}\n'
        .format(stressberry.__version__, datetime.datetime.now())
        )
    yaml.dump({
        'time': times,
        'temperature': temps,
        'cpu frequency': freq,
        'cpu load': load,
        },
        args.outfile
        )
    return


def _parse_cmd_arguments():
    parser = argparse.ArgumentParser(
        description='Run stress test for the Raspberry Pi.'
        )
    parser.add_argument(
        '-v', '--version',
        help='display version information',
        action='version',
        version='stressberry {}, Python {}'.format(
            stressberry.__version__, sys.version
            )
        )
    parser.add_argument(
        'outfile',
        nargs='?',
        type=argparse.FileType('w'),
        default=sys.stdout,
        help='output BibTeX file (default: stdout)'
        )
    return parser.parse_args()


if __name__ == '__main__':
    _main(_parse_cmd_arguments())
